// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using RTL.TvMazeScraper.Data.Context;

namespace RTL.TvMazeScraper.Data.Migrations
{
    [DbContext(typeof(TvMazeDbContext))]
    partial class TvMazeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RTL.TvMazeScraper.Data.Entities.Character", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday");

                    b.Property<long>("ExtId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("RTL.TvMazeScraper.Data.Entities.CharacterShow", b =>
                {
                    b.Property<long>("CharacterId");

                    b.Property<long>("ShowId");

                    b.HasKey("CharacterId", "ShowId");

                    b.HasIndex("ShowId");

                    b.ToTable("CharacterShow");
                });

            modelBuilder.Entity("RTL.TvMazeScraper.Data.Entities.Show", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ExtId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Shows");
                });

            modelBuilder.Entity("RTL.TvMazeScraper.Data.Entities.CharacterShow", b =>
                {
                    b.HasOne("RTL.TvMazeScraper.Data.Entities.Character", "Character")
                        .WithMany("Shows")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RTL.TvMazeScraper.Data.Entities.Show", "Show")
                        .WithMany("Cast")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
